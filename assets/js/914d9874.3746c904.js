"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[639],{7002:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=o(4848),i=o(8453);const r={},t="Installation",c={id:"tutorial-ruby-couchbase-orm/installation",title:"Installation",description:"Installing Couchbase ORM is a straightforward process. In this section, we'll guide you through the prerequisites and the step-by-step installation procedure.",source:"@site/docs/tutorial-ruby-couchbase-orm/02-installation.md",sourceDirName:"tutorial-ruby-couchbase-orm",slug:"/tutorial-ruby-couchbase-orm/installation",permalink:"/ruby-couchbase-orm-quickstart/docs/tutorial-ruby-couchbase-orm/installation",draft:!1,unlisted:!1,editUrl:"https://github.com/couchbase-examples/ruby-couchbase-orm-quickstart/tree/docs/docusaurus/docusaurus/docs/docs/tutorial-ruby-couchbase-orm/02-installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/ruby-couchbase-orm-quickstart/docs/tutorial-ruby-couchbase-orm/introduction"},next:{title:"Defining Models",permalink:"/ruby-couchbase-orm-quickstart/docs/tutorial-ruby-couchbase-orm/defining-models"}},a={},l=[{value:"2.1. Prerequisites",id:"21-prerequisites",level:2},{value:"2.2. Installing Couchbase ORM",id:"22-installing-couchbase-orm",level:2},{value:"2.3. Configuring Couchbase Connection",id:"23-configuring-couchbase-connection",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"Installing Couchbase ORM is a straightforward process. In this section, we'll guide you through the prerequisites and the step-by-step installation procedure."}),"\n",(0,s.jsx)(n.h2,{id:"21-prerequisites",children:"2.1. Prerequisites"}),"\n",(0,s.jsx)(n.p,{children:"Before installing Couchbase ORM, ensure that you have the following prerequisites in place:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Ruby"}),": Couchbase ORM requires Ruby version 2.7 or higher. You can check your Ruby version by running the following command in your terminal:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"ruby -v\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you don't have Ruby installed or your version is older than 2.7, you can install the latest version from the official Ruby website: ",(0,s.jsx)(n.a,{href:"https://www.ruby-lang.org",children:"https://www.ruby-lang.org"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Couchbase Server"}),": Couchbase ORM works with Couchbase Server, a NoSQL database. Make sure you have Couchbase Server installed and running on your system. You can download Couchbase Server from the official website: ",(0,s.jsx)(n.a,{href:"https://www.couchbase.com/downloads",children:"https://www.couchbase.com/downloads"})]}),"\n",(0,s.jsx)(n.p,{children:"Follow the installation instructions specific to your operating system to set up Couchbase Server."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Bundler"})," (optional): Bundler is a dependency management tool for Ruby. While not strictly required, it is recommended to use Bundler to manage your Ruby project's dependencies. You can install Bundler by running the following command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"gem install bundler\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"With these prerequisites in place, you're ready to install Couchbase ORM."}),"\n",(0,s.jsx)(n.h2,{id:"22-installing-couchbase-orm",children:"2.2. Installing Couchbase ORM"}),"\n",(0,s.jsx)(n.p,{children:"To install Couchbase ORM, you have a couple of options:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Using Bundler"})," (recommended): If you're using Bundler to manage your project's dependencies, add the following line to your ",(0,s.jsx)(n.code,{children:"Gemfile"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"gem 'couchbase-orm', git: 'https://github.com/doctolib/couchbase-orm'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Then, run the following command to install the gem:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"bundle install\n"})}),"\n",(0,s.jsx)(n.p,{children:"Bundler will take care of installing Couchbase ORM and its dependencies."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Using RubyGems"}),": If you're not using Bundler, you can install Couchbase ORM directly using RubyGems. Run the following command in your terminal:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"gem install couchbase-orm\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command will download and install the Couchbase ORM gem along with its dependencies."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"After the installation is complete, you're ready to configure Couchbase ORM to connect to your Couchbase Server instance."}),"\n",(0,s.jsx)(n.h2,{id:"23-configuring-couchbase-connection",children:"2.3. Configuring Couchbase Connection"}),"\n",(0,s.jsx)(n.p,{children:"To use Couchbase ORM in your Ruby application, you need to configure the connection settings for your Couchbase Server instance. Couchbase ORM provides a simple way to configure the connection."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Rails Applications"}),":"]}),"\n",(0,s.jsxs)(n.p,{children:["If you're using Couchbase ORM in a Rails application, create a new configuration file named ",(0,s.jsx)(n.code,{children:"couchbase.yml"})," in the ",(0,s.jsx)(n.code,{children:"config"})," directory of your Rails project. Add the following content to the file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"development:\n  connection_string: couchbase://localhost\n  bucket: my_app_development\n  username: my_username\n  password: my_password\n\ntest:\n  connection_string: couchbase://localhost\n  bucket: my_app_test\n  username: my_username\n  password: my_password\n\n production:\n   connection_string: <%= ENV['COUCHBASE_CONNECTION_STRING'] %>\n   bucket: <%= ENV['COUCHBASE_BUCKET'] %>\n   username: <%= ENV['COUCHBASE_USER'] %>\n   password: <%= ENV['COUCHBASE_PASSWORD'] %>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Replace the values for ",(0,s.jsx)(n.code,{children:"connection_string"}),", ",(0,s.jsx)(n.code,{children:"bucket"}),", ",(0,s.jsx)(n.code,{children:"username"}),", and ",(0,s.jsx)(n.code,{children:"password"})," with your actual Couchbase Server connection details."]}),"\n",(0,s.jsx)(n.p,{children:"Couchbase ORM will automatically load the configuration based on the current Rails environment."}),"\n",(0,s.jsx)(n.p,{children:"You can also set the connection details using environment variables in the production environment to avoid storing sensitive information in the source code."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Non-Rails Applications"}),":"]}),"\n",(0,s.jsx)(n.p,{children:"For non-Rails applications, you can configure the connection settings programmatically. Add the following code to your application's initialization file or before you start using Couchbase ORM:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ruby",children:"Couchbase ORM.configure do |config|\n  config.connection_string = 'couchbase://localhost'\n  config.bucket = 'travel-sample'\n  config.username = 'Administrator'\n  config.password = 'password'\nend\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Replace the values for ",(0,s.jsx)(n.code,{children:"connection_string"}),", ",(0,s.jsx)(n.code,{children:"bucket"}),", ",(0,s.jsx)(n.code,{children:"username"}),", and ",(0,s.jsx)(n.code,{children:"password"})," with your actual Couchbase Server connection details."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"With the connection configured, you're now ready to start defining your models and interacting with Couchbase Server using Couchbase ORM."}),"\n",(0,s.jsx)(n.p,{children:"In the next section, we'll explore how to define models in Couchbase ORM and work with the basic CRUD operations."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>t,x:()=>c});var s=o(6540);const i={},r=s.createContext(i);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);